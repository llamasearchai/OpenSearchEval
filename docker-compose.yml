version: '3.8'

services:
  # OpenSearchEval API
  opensearcheval-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: opensearcheval-api
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - DB_URL=postgresql://opensearcheval:opensearcheval@postgres:5432/opensearcheval
      - REDIS_URL=redis://redis:6379/0
      - LLM_API_KEY=${LLM_API_KEY:-your-api-key-here}
      - LOG_LEVEL=INFO
    depends_on:
      - postgres
      - redis
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./models:/app/models
      - ./experiments:/app/experiments
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - opensearcheval-network

  # OpenSearchEval UI
  opensearcheval-ui:
    build:
      context: .
      dockerfile: Dockerfile
      target: ui
    container_name: opensearcheval-ui
    ports:
      - "5000:5000"
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - API_HOST=opensearcheval-api
      - API_PORT=8000
    depends_on:
      - opensearcheval-api
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - opensearcheval-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: opensearcheval-postgres
    environment:
      - POSTGRES_DB=opensearcheval
      - POSTGRES_USER=opensearcheval
      - POSTGRES_PASSWORD=opensearcheval
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U opensearcheval -d opensearcheval"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - opensearcheval-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: opensearcheval-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - opensearcheval-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: opensearcheval-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - opensearcheval-api
      - opensearcheval-ui
    restart: unless-stopped
    networks:
      - opensearcheval-network

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: opensearcheval-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - opensearcheval-network

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: opensearcheval-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - opensearcheval-network

  # Development API service
  opensearcheval-api-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - "8001:8000"
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - DB_URL=postgresql://opensearcheval:opensearcheval@postgres:5432/opensearcheval
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - .:/app
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
    profiles:
      - dev
    networks:
      - opensearcheval-network

# Volumes
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

# Networks
networks:
  opensearcheval-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16